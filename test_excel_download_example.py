"""
–ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è Excel —Ñ–∞–π–ª–∞ —Å –ª–æ–∫–∞—Ç–æ—Ä–æ–º EXPORT_EXCEL_BUTTON
"""
import os
import sys
import time
import allure
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from pages.contacts.contacts_page import ContactsPage
from pages.login_admin_page import LoginAdminPage
from config.data import admin2_email, admin2_password


class ExcelDownloadTest:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Excel —Ñ–∞–π–ª–∞"""
    
    def __init__(self):
        self.browser = None
        self.contacts_page = None
        self.login_page = None
    
    def setup_browser(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤"""
        chrome_options = Options()
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        prefs = {
            "download.default_directory": os.path.join(os.getcwd(), "downloads"),
            "download.prompt_for_download": False,
            "download.directory_upgrade": True,
            "safebrowsing.enabled": True
        }
        chrome_options.add_experimental_option("prefs", prefs)
        
        self.browser = webdriver.Chrome(options=chrome_options)
        self.contacts_page = ContactsPage(self.browser)
        self.login_page = LoginAdminPage(self.browser)
    
    @allure.step("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ")
    def login(self):
        """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"""
        self.contacts_page.open_host()
        self.login_page.open_admin_login_page()
        self.login_page.enter_email(admin2_email)
        self.login_page.enter_password(admin2_password)
        self.login_page.admin_authorization()
    
    @allure.step("–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
    def open_contacts(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        self.contacts_page.open_contacts_page()
    
    @allure.step("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞")
    def download_excel(self):
        """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ Excel —Ñ–∞–π–ª–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"""
        download_dir = os.path.join(os.getcwd(), "downloads")
        os.makedirs(download_dir, exist_ok=True)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_path = self.contacts_page.download_excel_file(download_dir)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–∫–∞—á–∞–ª—Å—è
        assert os.path.exists(file_path), f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}"
        assert os.path.getsize(file_path) > 0, "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
        
        print(f"‚úÖ Excel —Ñ–∞–π–ª —Å–∫–∞—á–∞–Ω: {file_path}")
        return file_path
    
    @allure.step("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞")
    def verify_file_content(self, file_path):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Excel —Ñ–∞–π–ª–∞"""
        try:
            # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
            df = pd.read_excel(file_path)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
            assert not df.empty, "Excel —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π"
            
            print(f"‚úÖ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç {len(df)} —Å—Ç—Ä–æ–∫ –∏ {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫")
            print(f"üìä –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
            
            # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
            print("\nüìã –ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö:")
            print(df.head().to_string())
            
            return df
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            raise
    
    @allure.step("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –≤ —Å–∏—Å—Ç–µ–º–µ")
    def open_file(self, file_path):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ Excel —Ñ–∞–π–ª–∞ –≤ —Å–∏—Å—Ç–µ–º–µ"""
        try:
            import subprocess
            import platform
            
            if platform.system() == "Windows":
                os.startfile(file_path)
            elif platform.system() == "Darwin":  # macOS
                subprocess.run(["open", file_path])
            else:  # Linux
                subprocess.run(["xdg-open", file_path])
            
            print(f"‚úÖ –§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç: {file_path}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            return False
    
    def run_test(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞"""
        try:
            print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Excel —Ñ–∞–π–ª–∞...")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
            self.setup_browser()
            
            # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            self.login()
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            self.open_contacts()
            
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            file_path = self.download_excel()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            df = self.verify_file_content(file_path)
            
            # –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
            self.open_file(file_path)
            
            print("‚úÖ –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {file_path}")
            
            return file_path, df
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
            raise
        finally:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
            if self.browser:
                self.browser.quit()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞"""
    test = ExcelDownloadTest()
    try:
        file_path, df = test.run_test()
        print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(df)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
        print(f"üìÅ –§–∞–π–ª: {file_path}")
    except Exception as e:
        print(f"\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {e}")


if __name__ == "__main__":
    main()
