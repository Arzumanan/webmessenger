import random
import string

import allure
import pytest

from config.data import admin_email, admin_password
from pages.base_test import BaseTest


def _rand(n=6):
    return ''.join(random.choices(string.ascii_letters, k=n))


@allure.suite("–®–∞–±–ª–æ–Ω—ã: —Å–æ–∑–¥–∞–Ω–∏–µ")
class TestTemplates(BaseTest):

    @allure.title("–í–∞–ª–∏–¥–∞—Ü–∏—è: –ø—É—Å—Ç–æ–µ –∏–º—è —à–∞–±–ª–æ–Ω–∞")
    def test_validation_empty_name(self):
        self.base_page.open_host()
        self.login_admin_page.open_admin_login_page()
        self.login_admin_page.enter_email(admin_email)
        self.login_admin_page.enter_password(admin_password)
        self.login_admin_page.admin_authorization()

        self.templates_page.open_settings_and_check()
        self.templates_page.open_templates()
        self.templates_page.open_add_modal()
        # –ü—É—Å—Ç–æ–µ –∏–º—è, –≤–∞–ª–∏–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
        self.templates_page.fill_template_form(name="", category=None, text=f"txt-{_rand(6)}")
        self.templates_page.save_template()
        from selenium.webdriver.common.by import By
        self.templates_page.element_in_visible((By.XPATH, "//*[contains(@class,'error') and contains(.,'–ù–∞–∑–≤–∞–Ω–∏–µ') or contains(.,'–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ') or contains(.,'–í–≤–µ–¥–∏—Ç–µ')]"))

    @allure.title("–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª")
    def test_create_and_delete_template_cycle(self):
        # –õ–æ–≥–∏–Ω –∫–∞–∫ –∞–¥–º–∏–Ω
        self.base_page.open_host()
        self.login_admin_page.open_admin_login_page()
        self.login_admin_page.enter_email(admin_email)
        self.login_admin_page.enter_password(admin_password)
        self.login_admin_page.admin_authorization()

        # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        self.templates_page.open_settings_and_check()

        # –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —à–∞–±–ª–æ–Ω–æ–≤ (–ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞)
        self.templates_page.open_templates()

        # –î–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞
        name = f"CycleTpl-{_rand(5)}"
        text = f"–®–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ {_rand(10)}"

        # ===== –ö–ï–ô–° 1: –°–û–ó–î–ê–ù–ò–ï –®–ê–ë–õ–û–ù–ê =====
        print(f"\nüîÑ –ö–ï–ô–° 1: –°–û–ó–î–ê–ù–ò–ï –®–ê–ë–õ–û–ù–ê")
        print(f"üìù –ò–º—è —à–∞–±–ª–æ–Ω–∞: {name}")
        print(f"üìÑ –¢–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞: {text}")
        
        with allure.step("–ö–ï–ô–° 1: –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"):
            # –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω
            self.templates_page.open_add_modal()
            self.templates_page.fill_template_form(name=name, category=None, text=text)
            self.templates_page.save_template()

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤ —Å–ø–∏—Å–∫–µ
            self.templates_page.assert_template_in_list(name)
            print(f"‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢ –ö–ï–ô–°–ê 1: –®–∞–±–ª–æ–Ω '{name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
        
        # ===== –ö–ï–ô–° 2: –£–î–ê–õ–ï–ù–ò–ï –®–ê–ë–õ–û–ù–ê =====
        print(f"\nüóëÔ∏è –ö–ï–ô–° 2: –£–î–ê–õ–ï–ù–ò–ï –®–ê–ë–õ–û–ù–ê")
        print(f"üéØ –¶–µ–ª—å: –£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω '{name}'")
        
        with allure.step("–ö–ï–ô–° 2: –£–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"):
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            self.templates_page.delete_template_by_name(name)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ —Å–ø–∏—Å–∫–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
            self.templates_page.assert_template_not_in_list(name)
            print(f"‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢ –ö–ï–ô–°–ê 2: –®–∞–±–ª–æ–Ω '{name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")
        
        # ===== –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ =====
        print(f"\nüéâ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: –£–°–ü–ï–®–ù–û")
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: –£–°–ü–ï–®–ù–û")
        print(f"   üìä –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –ó–ê–í–ï–†–®–ï–ù")

